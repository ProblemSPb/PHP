<?php

// md5 - возвращает MD5-хэш строки

/*
Хэш-функция предназначена для свертки входного массива любого размера в битовую строку, для MD5 длина выходной строки равна 128 битам. Для чего это нужно? К примеру у вас есть два массива, а вам необходимо быстро сравнить их на равенство, то хэш-функция может сделать это за вас, если у двух массивов хэши разные, то массивы гарантировано разные, а в случае равенства хэшей — массивы скорее всего равны.

Однако чаще всего хэш-функции используются для проверки уникальности пароля, файла, строки и тд. К примеру, скачивая файл из интернета, вы часто видите рядом с ним строку вида b10a8db164e0754105b7a99be72e3fe5 — это и есть хэш, прогнав этот файл через алгоритм MD5 вы получите такую строку, и, если хэши равны, можно с большой вероятностью утверждать что этот файл действительно подлинный (конечно с некоторыми оговорками, о которых расскажу далее).

Хэши могут использоваться для шифрования паролей и передачи их в зашифрованном виде в базы данных. Потом для сравнения паролей используются хэши.
*/

$str = 'яблоко';
echo md5($str);
echo "<br>";

if (md5($str) === '1afa148eb41f2e7103f21410bf48346c') {
	echo "Проверка пройдена";
}

echo "<br> - - - - - - - - - - - - - - - - - - <br>";

// md5(serialize()) - md5 от array

$array1 = array(1, 4, 5, 7, 19);
$array2 = array(1, 4, 5, 7, 19, 20);
$array3 = array(1, 4, 5, 7, 19);

$array1MD5 = md5(serialize($array1));
echo $array1MD5 ."<br>";

$array2MD5 = md5(serialize($array2));
echo $array2MD5 ."<br>";

$array3MD5 = md5(serialize($array3));
echo $array3MD5."<br>";

if ($array1MD5 === $array2MD5) {
	echo "Массивы одинаковые";
}
else {
	echo "Массивы разные";
}
echo "<br>";

if ($array1MD5 === $array3MD5) {
	echo "Массивы одинаковые";
}
else {
	echo "Массивы разные";
}

echo "<br> - - - - - - - - - - - - - - - - - - <br>";

// intval - возвращает целое значение (int) переменной

$number = intval(42.2);

if ($number) { // если выполнилось приведение number в int
	echo "Результат: ".$number;
}

echo "<br> - - - - - - - - - - - - - - - - - - <br>";

// htmlspecialchars = преобразует специальные символы html, js etc таким образом, что он не выполняется.
// например, мы хотим вывести на экран теги

$new = htmlspecialchars("<a href='test link'> TEST LINK </a>"); // передали html-теги -> ссылка
echo $new; // тут они выведутся как текст
echo "<br>";

// strip_tags - удаляет HTML и PHP-теги из строки

$text = '<p>Параграф.</p><!-- Комментарий--><a href="#fragment">Еще какой-то текст.</a>';
echo strip_tags($text);
echo "<br>";

// в этом примере разрешаем оставить теги <p> и <a>
echo strip_tags($text, '<p><a>' );


?>